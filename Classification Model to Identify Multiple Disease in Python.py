# -*- coding: utf-8 -*-
"""Classification Model to Identify Multiple Disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19P_Ehn3T3mUmFJ7IlZnXQH1Dy0dzDdln

Classification Model to Identify Multiple Disease
"""

# import library
import pandas as pd
import seaborn as sb
import numpy as np
import matplotlib.pyplot as plt

# import data
disease = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/MultipleDiseasePrediction.csv')

# view data
disease.head()

#info of data
disease.info('info')

#summary statistics
disease.describe()

#check for missing value
disease.isna().sum()

#check for categories 
disease.nunique()

#correlation
disease.corr()

#column names
disease.columns

#define y
y=disease['prognosis']

#define x
x=disease.drop(['prognosis'],axis=1)

#split data
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test= train_test_split(x,y,test_size=0.2, random_state=2529)

#verify shape
x_train.shape, x_test.shape, y_train.shape, y_test.shape

#select model
from sklearn.ensemble import RandomForestClassifier
project=RandomForestClassifier()

#train model
project.fit(x_train, y_train)

#predict with model
y_pred=project.predict(x_test)

#model evaluation 
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

#model accuracy
accuracy_score(y_test,y_pred)

#model confusion matrix
confusion_matrix(y_test, y_pred)

#model classification report
print(classification_report(y_test, y_pred))

#future predictions 
sample=disease.sample()
sample

# define x_new
x_new=sample.loc[:,x.columns]
x_new

#predict for x_new
project.predict(x_new)